
import { useState } from "react";
import { 
  Card, 
  CardContent, 
  CardDescription, 
  CardHeader, 
  CardTitle 
} from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Brain, Check } from "lucide-react";
import { Insight, Report, Model, AIInsightsPanelProps } from "./types";
import { InsightsTab } from "./InsightsTab";
import { ReportsTab } from "./ReportsTab";
import { ModelsTab } from "./ModelsTab";

export const AIInsightsPanel = ({ entityId, entityName }: AIInsightsPanelProps) => {
  const [insights, setInsights] = useState<Insight[]>([
    {
      id: "1",
      title: "Revenue Growth Opportunity",
      description: "AI predicts a 15% increase in revenue next quarter based on market trends.",
      type: "positive",
      relevanceScore: 0.85,
      generatedDate: "2023-12-01"
    },
    {
      id: "2",
      title: "Potential Cost Overruns",
      description: "AI identifies potential cost overruns in the supply chain due to rising raw material prices.",
      type: "negative",
      relevanceScore: 0.92,
      generatedDate: "2023-11-28"
    },
    {
      id: "3",
      title: "Customer Churn Analysis",
      description: "AI indicates a slight increase in customer churn rate in the last month.",
      type: "neutral",
      relevanceScore: 0.78,
      generatedDate: "2023-11-25"
    }
  ]);

  const [reports, setReports] = useState<Report[]>([
    {
      id: "1",
      title: "Financial Performance Report",
      description: "Comprehensive report on the financial performance of the entity.",
      generatedDate: "2023-12-05",
      status: "complete"
    },
    {
      id: "2",
      title: "Risk Assessment Report",
      description: "Detailed risk assessment report generated by AI.",
      generatedDate: "2023-12-01",
      status: "pending"
    }
  ]);

  const [models, setModels] = useState<Model[]>([
    {
      id: "1",
      name: "Revenue Forecasting Model",
      type: "Regression",
      accuracy: 0.95,
      status: "active"
    },
    {
      id: "2",
      name: "Risk Assessment Model",
      type: "Classification",
      accuracy: 0.88,
      status: "active"
    }
  ]);

  const [isGeneratingReport, setIsGeneratingReport] = useState(false);
  const [isTrainingModel, setIsTrainingModel] = useState(false);

  const handleGenerateReport = () => {
    setIsGeneratingReport(true);
    setTimeout(() => {
      const newReport: Report = {
        id: Date.now().toString(),
        title: "New AI Generated Report",
        description: "This is a new report generated by the AI.",
        generatedDate: new Date().toLocaleDateString(),
        status: "complete"
      };
      setReports([...reports, newReport]);
      setIsGeneratingReport(false);
    }, 3000);
  };

  const handleTrainModel = () => {
    setIsTrainingModel(true);
    setTimeout(() => {
      const newModel: Model = {
        id: Date.now().toString(),
        name: "New AI Model",
        type: "Classification",
        accuracy: 0.92,
        status: "active"
      };
      setModels([...models, newModel]);
      setIsTrainingModel(false);
    }, 4000);
  };

  return (
    <Card className="mb-6 border border-purple-100 dark:border-purple-800">
      <CardHeader className="pb-2">
        <CardTitle className="text-lg font-medium flex items-center gap-2">
          <Brain className="h-5 w-5 text-purple-600 dark:text-purple-400" />
          AI Insights & Recommendations
        </CardTitle>
        <CardDescription>
          Harness the power of AI to gain actionable insights for {entityName}
        </CardDescription>
      </CardHeader>
      <CardContent>
        <Tabs defaultValue="insights" className="space-y-4">
          <TabsList>
            <TabsTrigger value="insights">Key Insights</TabsTrigger>
            <TabsTrigger value="reports">AI Generated Reports</TabsTrigger>
            <TabsTrigger value="models">AI Models</TabsTrigger>
          </TabsList>
          <TabsContent value="insights" className="space-y-4">
            <InsightsTab insights={insights} entityName={entityName} />
          </TabsContent>
          <TabsContent value="reports" className="space-y-4">
            <ReportsTab 
              reports={reports} 
              entityName={entityName} 
              isGeneratingReport={isGeneratingReport} 
              handleGenerateReport={handleGenerateReport}
            />
          </TabsContent>
          <TabsContent value="models" className="space-y-4">
            <ModelsTab 
              models={models} 
              entityName={entityName} 
              isTrainingModel={isTrainingModel} 
              handleTrainModel={handleTrainModel}
            />
          </TabsContent>
        </Tabs>
      </CardContent>
    </Card>
  );
};
